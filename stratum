#!/usr/bin/env bash
# StratumOS - remote controlled linux system
SCRIPT=${0##*/}
ARGS=${@}
if [[ $ARGS == "" ]]; then echo "no args"; fi
URL_01=http://stratumos.com # main repository server
GIT_01=https://github.com/StratumOS/StratumOS # main git server
CONF=.stratum.conf
STRATUM_DIR=/stratum
source ./$CONF

init () {
rm /stratum/.stratum.conf; echo "remove config file and download again ..."
while ! [[ -s ./$CONF && -d $HOME/.stratum && -d /stratum && -s /stratum/stratum ]]; do
  mkdir $HOME/.stratum 2>/dev/null
  mkdir /stratum 2>/dev/null
  cp ./stratum /stratum/stratum 2>/dev/null # copy
  rm ./stratum # remove from this path
  ln -s /stratum/stratum $HOME$STRATUM_DIR 2>/dev/null # symlink link
  ln -s /stratum/.stratum.conf $HOME/$CONF 2>/dev/null # symlink link
  ln -s /stratum/stratum /usr/bin/stratum 2>/dev/null # symlink link
  if ! wget -nv -O /stratum/$CONF --no-check-certificate $URL_01/$CONF; then
    echo -e "\e[101m\e[30m ERROR: there is no file \e[0m\e[34m"$CONF"\e[0m on the server" $URL_01\
    " or no response! exit ...\e[0m"
    exit 1
  else
    echo -e "\e[100m\e[97m I \e[0m\e[97m OK: download file "$CONF" from \e[0m"$URL_01
  fi
done
}

update () {
  echo -e "\e[44m start update file: "$SCRIPT" ...\e[0m\e[31m CAUTION! update itself ...  \e[0m" | logline
  if ! wget -nv -O /stratum/stratum.new --no-check-certificate $URL_01/$SCRIPT; then
    echo -e "\e[101m\e[30m ERROR: there is no file "stratum" on the server" $URL_01\
    " or no response! check again ...\e[0m" | logline
    exit 1
  else
    rm -rf $BACKUP/$SCRIPT.bak
      echo -e '\e[32m backup copy ...\e[0m'
    cp /stratum/stratum $BACKUP/stratum.bak
      echo -e '\e[35m backup file: '$BACKUP'/'$SCRIPT.bak' ...just in case...\e[0m'
      echo -e '\e[32m remove existing oryginal ...\e[0m'
    rm -rf /stratum/stratum
      echo -e '\e[32m copy new one...\e[0m'
    cp /stratum/stratum.new /stratum/stratum 2>/dev/null
      echo -e '\e[32m chmod +x ...\e[0m'
    chmod +x /stratum/stratum
    echo -e $"\e[32m file: \"stratum\" updated...\e[0m" | logline
  fi
  exit 0
}

logline() {
    while IFS= read -r line; do
      case $line in
        *"denied"*)
          echo -e "\e[30m ! \e[0m\e[33m -LIGHT_WARNING"
          ;;
          *)
          ;;
      esac
        echo -e "$(date +%F' '%T) $SCRIPT - $line"
        echo "$(date +%F' '%T) $SCRIPT - $line" >> $LOGFILE
    done
}

root_check () {
if [ "$USER" != "root" ];then
		echo -e "\e[31mRun this script as root! exit...\e[0m"
		echo "Run this script as root! exit..." | logline; exit
	else
		echo -e "\e[32mStart OK ... as root\e[0m" | logline
fi
}

touch /var/log/stratum.log 2>/dev/null; chmod 666 /var/log/stratum.log 2>/dev/null | logline
LOGFILE=/var/log/stratum.log
BACKUP=/var/backups/stratum
mkdir $BACKUP 2>/dev/null

info_bar () {
echo -e "\e[42m\e[30mOK\e[0m\e[33m\e[32m SCRIPT=\e[0m\e[94m"$SCRIPT \
"\e[0m\e[33m\e[32m ARGS=\e[0m\e[94m"$ARGS \
"\e[0m\e[33m\e[32m USER=\e[0m\e[93m"$USER \
"\e[0m\e[32m URL_01=\e[0m"$URL_01 "\e[32m LOGFILE=\e[0m"$LOGFILE
echo -e "\e[32m $(date +%F' '%T) $SCRIPT - Start script ...\e[0m" >> $LOGFILE
}
info_bar

export_path () {
case "$(echo $PATH)" in
  *"/stratum"*)
  ;;
  *)
  echo -e "\e[33mbefore:\e[0m" $PATH
#  export PATH=$PATH:/stratum
  PATH=$PATH:/stratum; export PATH
  sed -i 's/export PATH=$PATH:\/stratum//g' ~/.profile
  echo 'export PATH=$PATH:/stratum'  >> ~/.profile
  echo 'export PATH=$PATH:/stratum'  >> ~/.bash_profile
  ;;
esac
echo -e "\e[32mPATH is OK now: \e[0m" $PATH
}

check_distro () {
lsb_release -d | logline
uname -a | logline
}
case $1 in
  --update|stratum:update|stratum:u|str:u)
		root_check
    update
	;;
  --help|-h)
    help
    ;;
  xterm:htop)
    echo -e '\e[32m OK, execute htop in xterm terminal ... \e[0m' | logline
  ;;
  --full|--all|-0)
    export_path
    check_distro
    root_check
    install_stuff_1
    create_busyuser
    rm_files
    apt_files
    install_ssh
    clean_apt
    download_source_from_github
    show_info
  ;;
  '')
    echo -e '\e[44m no arguments... exit ...\e[0m \e[32m type: stratum --help [or -h] ...\e[0m'
    exit 1
  ;;
  $1)
    $1
  ;;
esac
